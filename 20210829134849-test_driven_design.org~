:PROPERTIES:
:ID:       d6b9c048-f1d4-4d01-b600-f552099d2bac
:END:
#+title: Test Driven Design

This is the place for everything Test Driven Design related.


Although its titles Test Driven Design, this section will contain everything
to do with error handling and debugging

* Problem Management / Design Techniques
** What Resources can be used to find the solutions to problems? 
*** The "inspect" feature of Chrome.
**** This is especially good for javascript
*** IDE Debugging 
**** Test Driven Design(TDD)
***** [[https://www.youtube.com/watch?v=fpVDe6Jvch4][Test-Driven Design Java #3]]
****** You begin creating a program by asking a series of questions.
****** Formulating a series of tests that the program will have to pass if it is to do what it is meant to do. 
**** Writing RunTimeExceptions
**** [[https://youtu.be/grEKMHGYyns=2733][German Java Tutorial]]
**** Write Code that gives errors and or prints the values of variables at specific times.
     Functions that post when they have completed.
*** Object Oriented Programming
    In object oriented programming you have full control over the names of the classes and methods.
    Your goal is to make your code as readable as possible. To organize it in the most simplest fashion. 
    To not have any thing that is not necessary and understand how everything in the program relates to
    everything else. 
**** Methods should only do one thing. 
**** Make sure to keep things private and only make public what is necessary.
**** Use methods to hide the underworkings of the code. 
*** Functional Programming 
    Functional programming is like creating algorithms and search methods and sort methods. And making them 
    as efficent as possible. 
**** Big O notation
**** If it is a recursive program, turn it into a tree. 
*** Understanding Functions
**** The Various statements and loops; methods. The various methods that we create can be seen as equal to the decisions that people make. 
***** An "if" statement is a decision; should I do this or that?
***** A "while" loop is a way of testing. As long as this is this, do this. 
***** A "for" loop is when you repeat a process for so many times. Do this, for this many times. 
***** "if-then" Statements are making decisions between a set of choices. Gives the perosn other things to consider.   
***** A "switch" statement is more automatic with predetermined static choices
**** Examples of decision Loops and Conditionals.
***** How are decisions made to arrive at solutions or ideas? 
***** I need to apply 5 coats of paint. 
***** Make sure that the glass doesnt't fall off the counter. If it does, catch it. 
**** Understanding the Types of Functions
***** How does a search function work? 
***** How do you sort an array?
***** How do send information and get information from a database?
***** How do you trace lines on the screen and do collision detection?
***** Visualized occilation?
